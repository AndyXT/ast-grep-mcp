name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt, clippy
    
    - name: Install UV
      run: |
        pip install uv
    
    - name: Check Rust version
      run: |
        rustc --version
        cargo --version
    
    - name: Create virtual environment and install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        # Clear any potential caches
        rm -rf ~/.cache/pip ~/.cache/uv
        # Install ast-grep-py separately first to ensure it builds correctly
        uv pip install ast-grep-py==0.37.0 --verbose
        # Then install all other dependencies
        uv sync --dev
    
    - name: Verify ast-grep-py installation
      run: |
        source .venv/bin/activate
        python -c "from ast_grep_py import SgRoot; print('Successfully imported SgRoot')"
    
    - name: Run linter
      run: |
        source .venv/bin/activate
        ruff check .
    
    - name: Run tests with pytest
      run: |
        source .venv/bin/activate
        # Exclude test_mcp_client.py as it requires a running server
        pytest -v --cov=src.ast_grep_mcp --cov-report=xml tests/
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false 